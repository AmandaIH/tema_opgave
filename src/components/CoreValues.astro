---

//@ts-nocheck
export interface CoreValuesProps {
  coreValuesData: {
    values: {
      icon: string;
      title: string;
      description: string;
      link: {
        url: string;
        text: string;
      };
    }[];
  };
  theme?: "light" | "dark";
}

const { coreValuesData, theme = "light" } = Astro.props;

const themes = {
  light: {
    sectionBackground: "#F5F5F5",
    cardBackground: "#FFFFFF",
    cardTextColor: "#181818",
    buttonBackground: "#181818",
    buttonTextColor: "#FFFFFF",
    svgBackground: "#181818",
    svgColor: "#FFFFFF",
    pColor: "#595566",
    h4Color: "#181818",
    linkColor: "#181818",
  },
  dark: {
    sectionBackground: "#181818",
    cardBackground: "#FFFFFF",
    cardTextColor: "#181818",
    buttonBackground: "#FFFFFF",
    buttonTextColor: "#181818",
    svgBackground: "#181818",
    svgColor: "#FFFFFF",
    pColor: "#595566",
    h4Color: "#FFFFFF",
    linkColor: "#181818",
  },
};

const currentTheme = themes[theme];
---



<section class="corevalues" style={`background-color: ${currentTheme.sectionBackground};`}>

  <div class="outerText" style={`background-color: ${currentTheme.sectionBackground};`}>
    <div class="text">
      <p class="subtitle" >GROWING WITH OUR CLIENTS</p>
      <h2 style={`color: ${currentTheme.h4Color};`}>Our core values & principles</h2>
      <p style={`color: ${currentTheme.h4Color};`}>Capitalize on low hanging fruit to identify a ballpark value added activity beta test. Override the digital divide with additional from DevOps.</p>
    </div>
    <div class="getintouch">
      <button style={`background-color: ${currentTheme.buttonBackground}; color: ${currentTheme.buttonTextColor};`}>Get in touch</button>
    </div>
  </div>

  <ul class="core-values">
    {
      coreValuesData.values.map((value) => (
        <li class="value-item" style={`background-color: ${currentTheme.cardBackground}; color: ${currentTheme.cardTextColor};`}>
          <div class="value-icon-wrapper" style={`background-color: ${currentTheme.svgBackground};`}>
            <img src={`/icons/${value.icon}.svg`} 
                 alt={value.title} 
                 class="value-icon"
                 style={`filter: invert(1);`} /> 
          </div>
          <h4 style={`color: ${currentTheme.h4Color};`}>{value.title}</h4>
          <p style={`color: ${currentTheme.pColor};`}>{value.description}</p>
          <button style={`background-color: ${currentTheme.cardBackground}; color: ${currentTheme.buttonTextColor};`}>
            <a href={value.link.url} style={`color: ${currentTheme.linkColor}; text-decoration: none;`}>{value.link.text}</a>
          </button>
        </li>
      ))
    }
  </ul>
</section>

<style>
  .corevalues {
    grid-column: full;
    display: grid;
    grid-template-columns:
    [full-start] 1fr [content-start] minmax(0, var(--content-width)) [content-end] 1fr [full-end];
    padding-bottom: 2rem;
  }
  .core-values {
  grid-column: content;
  display: grid;
  grid-template-columns: repeat(4, 1fr); 
  gap: 0.75rem;
  list-style: none;
  padding: 0;
  margin: 0;
  }

  .value-item {
    padding: 1rem;
    text-align: left;
    width: 15rem;
    border-radius: 8px;
  }

  .value-icon-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    margin-bottom: 1rem;
  }

  .value-icon {
    width: 20px;
    height: 20px;
  }

  button {
    margin-top: 0.5rem;
    padding: 0.5rem 1rem;
    border: none;
    cursor: pointer;
    border-radius: 25px;
  }

  .outerText {
    grid-column: content;
    padding: 2rem 0;
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  .subtitle {
    background-color: #FFCC4A;
    border-radius: 2rem;
    font-family: var(--font-family-lato);
    font-size: 0.75rem;
    width: fit-content;
    padding: 0.2rem;
    color: var(--primary03);
  }
  .getintouch {
  align-self: end;   
  justify-self: end; 
  }
  .getintouch button {
    margin-top: 1rem;
  }

  .text h2 {
    font-family: var(--font-family-header);
    font-size: 2rem;
  }
  .text p {
    font-size: 0.85rem;
  }
</style>
